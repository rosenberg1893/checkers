// функция begin() вызывается при загрузке странички
// здесь вычисляются размеры слоёв и изменяется их
// положение относительно друг друга для красивой разметки
function begin() {
	// divCaption - слой с логотипом "ШАШКИ"
	// получаем через метод getBoundingClientRect() данные
	// о расположении и размере объекта divCaption в виде массива типа
	// ключ-значение, например, ключу 'width' соответствует длина объекта
	var data_divCaption = divCaption.getBoundingClientRect();
	
	// изначально правая и левая границы прямоугольника логотипа
	// находятся слишком близко к тексту, поэтому нужно увеличить
	// длину прямоугольника (достаточно в 1.1 раз)
	divCaption.style.width = data_divCaption['width'] * 1.10 + "px";
	
	// текст всё равно оказывается не по центру прямоугольника,
	// а чуть выше центра, поэтому немного уменьшаем высоту прямоугольника
	divCaption.style.height = data_divCaption['height'] * 0.90 + "px";
	
	// буквы получаются толще обводки: утолщаем её примерно до размера букв
	// (толщина букв составляет примерно 1/16 от высоты прямоугольника)
	divCaption.style.borderWidth = data_divCaption['height'] / 16 + "px";
	
	// divSpace0 - пустое пространство между верхней границей странички
	// и логотипом "ШАШКИ", чтобы логотип находился ближе к центру,
	// задаём высоту слоя divSpace0 в 125% от высоты логотипа
	divSpace0.style.height = data_divCaption['height'] * 1.25 + "px";
	
	// получаем данные о размерах и расположении слоя с текстом о выборе размера доски
	var data_divText1 = divText1.getBoundingClientRect();
	
	// задаём высоты пустых пространств выше и ниже текста, чтобы
	// текст не располагался вплотную ни к логотипу "ШАШКИ" (divSpace1),
	// ни к кнопкам с предложенными размерами доски (divSpace2)
	divSpace1.style.height = data_divText1['height'] * 0.5 + "px";
	divSpace2.style.height = data_divText1['height'] * 0.2 + "px";
	
	// получаем данные о размерах и расположении слоя с текстом о собственном размере доски
	var data_divText2 = divText2.getBoundingClientRect();
	
	// задаём высоты пустых пространств выше и ниже текста, чтобы текст не располагался
	// вплотную ни к кнопкам с предложенными размерами доски (divSpace3),
	// ни к текстовому полю с кнопкой "Играть" (divSpace4)
	divSpace3.style.height = data_divText2['height'] * 0.5 + "px";
	divSpace4.style.height = data_divText2['height'] * 0.2 + "px";
	
	// divText3 - маленький слой с парой символов 'x ' (х с пробелом)
	// он показывает, что в текстовом поле справа мы задаём свой размер доски
	// получаем данные о размерах и расположении этого слоя
	var data_divText3 = divText3.getBoundingClientRect();
	
	// divSpace5 - пустое пространство между текстовым полем и кнопкой "Играть"
	// задаём его длину как половину от длины слоя divText3, чтобы кнопка и 
	// текстовое поле не слипались и не находились слишком далеко друг от друга
	divSpace5.style.width = data_divText3['width'] * 0.5 + "px";
	
	// textField1 - текстовое поле, в котором мы вводим собственный размер доски
	// получаем данные о размерах и расположении этого текстового поля
	var data_textfield1 = textfield1.getBoundingClientRect();
	
	// как бы мы ни задавали длину текстового поля в символах через атрибут SIZE,
	// наименьшая возможная длина для нас окажется чересчур большой
	// задаём новую длину как 40% от изначальной
	textfield1.style.width = data_textfield1['width'] * 0.4 + "px";
}

// функция ниже вызывается всякий раз, когда мы вводим что-либо в текстовое поле
// эта функция не даёт нам вводить в текстовое поле ничего, кроме цифр
function ONINPUT_textfield1() {
	// получаем введённый текст в текстовое поле и записываем его в переменную str
	var str = textfield1.value;
	
	// через регулярные выражения очень удобно проверять, находится ли символ
	// в заданном диапазоне, поэтому записываем в regex диапазон цифр от 0 до 9
	var regex = /[0-9]/;
	

	// нумерация символов в строке начинается с 0, тогда последний символ имеет номер,
	// равный (число всех символов - 1); число всех символов (длина строки) получаем
	// как str.length и номер последнего символа тогда str.length - 1
	var numberLastChar = str.length - 1;
	
	// строка есть массив символов, поэтому получить i-тый символ строки str можно через str[i];
	// получаем последний символ через его номер, который мы уже знаем
	var lastChar = str[numberLastChar];
	
	// метод test() диапазона цифр от 0 до 9 regex принимает в качестве аргумента наш последний символ
	// lastChar и возвращает true, если этот символ - одна из цифр от 0 до 9 и false, если это что-то другое
	// если последний символ НЕ является цифрой...
	if(!regex.test(lastChar)) {
		// длину строки (число всех символов) записываем в переменную len
		var len = str.length;
		
		// если это был единственный символ в строке, стираем его, строка становится пустой ""
		// иначе, если в строке были ещё символы, выделяем всех их от начального и 
		// до предпоследнего и записываем в текстовое поле то, что выделили
		// другими словами, если последний символ НЕ цифра, мы его убираем из строки
		textfield1.value = len == 1 ? "" : str.substring(0, numberLastChar);
	}
}

// функция start вызывается при нажатии на кнопку "Играть",
// а также при нажатии на любую из кнопок с предложенными
// размерами доски; эта функция загружает в текущую вкладку
// страничку с будущей шашечной доской, передавая ей размер доски
function start(n) {
	// загружаем в текущую вкладку страничку с будущей доской
	// добавляем к адресу странички checkers.html дополнительную
	// информацию о размере доски ?n=...
	location.assign('checkers.html?n=' + n);
}
